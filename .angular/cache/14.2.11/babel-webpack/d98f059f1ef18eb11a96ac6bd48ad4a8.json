{"ast":null,"code":"import { AgGridAngular } from 'ag-grid-angular';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ag-grid-angular\";\nimport * as i3 from \"./header/header.component\";\nimport * as i4 from \"@angular/common\";\nexport class AppComponent {\n  constructor(http) {\n    this.http = http;\n    this.loadedFeature = 'recipe';\n    this.columnDefs = [{\n      field: 'make'\n    }, {\n      field: 'model'\n    }, {\n      field: 'price'\n    }]; // DefaultColDef sets props common to all Columns\n\n    this.defaultColDef = {\n      sortable: true,\n      filter: true\n    };\n  }\n\n  onNavigate(feature) {\n    this.loadedFeature = feature;\n  } // Example load data from server\n\n\n  onGridReady(params) {\n    this.rowData$ = this.http.get('https://www.ag-grid.com/example-assets/row-data.json');\n  } // Example of consuming Grid Event\n\n\n  onCellClicked(e) {\n    console.log('cellClicked', e);\n  } // Example using Grid's API\n\n\n  clearSelection() {\n    this.agGrid.api.deselectAll();\n  }\n\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\n\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  viewQuery: function AppComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(AgGridAngular, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.agGrid = _t.first);\n    }\n  },\n  decls: 8,\n  vars: 7,\n  consts: [[3, \"featureSelected\"], [1, \"container\"], [1, \"row\"], [1, \"col-md-12\"], [1, \"ag-theme-alpine\", 2, \"width\", \"100%\", \"height\", \"100%\", 3, \"columnDefs\", \"defaultColDef\", \"rowData\", \"rowSelection\", \"animateRows\", \"gridReady\", \"cellClicked\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"app-header\", 0);\n      i0.ɵɵlistener(\"featureSelected\", function AppComponent_Template_app_header_featureSelected_0_listener($event) {\n        return ctx.onNavigate($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h1\");\n      i0.ɵɵtext(5, \"Hello Buddy\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"ag-grid-angular\", 4);\n      i0.ɵɵlistener(\"gridReady\", function AppComponent_Template_ag_grid_angular_gridReady_6_listener($event) {\n        return ctx.onGridReady($event);\n      })(\"cellClicked\", function AppComponent_Template_ag_grid_angular_cellClicked_6_listener($event) {\n        return ctx.onCellClicked($event);\n      });\n      i0.ɵɵpipe(7, \"async\");\n      i0.ɵɵelementEnd()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"columnDefs\", ctx.columnDefs)(\"defaultColDef\", ctx.defaultColDef)(\"rowData\", i0.ɵɵpipeBind1(7, 5, ctx.rowData$))(\"rowSelection\", \"multiple\")(\"animateRows\", true);\n    }\n  },\n  dependencies: [i2.AgGridAngular, i3.HeaderComponent, i4.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,aAAT,QAA8B,iBAA9B;;;;;;AASA,OAAM,MAAOC,YAAP,CAAmB;EAwBvBC,YAAoBC,IAApB,EAAoC;IAAhB;IAvBpB,qBAAgB,QAAhB;IAKO,kBAAuB,CAC5B;MAAEC,KAAK,EAAE;IAAT,CAD4B,EAE5B;MAAEA,KAAK,EAAE;IAAT,CAF4B,EAG5B;MAAEA,KAAK,EAAE;IAAT,CAH4B,CAAvB,CAkB6B,CAZpC;;IACO,qBAAwB;MAC7BC,QAAQ,EAAE,IADmB;MAE7BC,MAAM,EAAE;IAFqB,CAAxB;EAWiC;;EArBxCC,UAAU,CAACC,OAAD,EAAgB;IACxB,KAAKC,aAAL,GAAqBD,OAArB;EACD,CALsB,CA0BvB;;;EACAE,WAAW,CAACC,MAAD,EAAuB;IAChC,KAAKC,QAAL,GAAgB,KAAKT,IAAL,CACbU,GADa,CACF,sDADE,CAAhB;EAED,CA9BsB,CAgCvB;;;EACAC,aAAa,CAAEC,CAAF,EAAqB;IAChCC,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,CAA3B;EACD,CAnCsB,CAqCvB;;;EACAG,cAAc;IACZ,KAAKC,MAAL,CAAYC,GAAZ,CAAgBC,WAAhB;EACD;;AAxCsB;;;mBAAZpB,cAAYqB;AAAA;;;QAAZrB;EAAYsB;EAAAC;IAAA;qBAsBZxB,eAAa;;;;;;;;;;;;;;MCjC1BsB;MAAYA;QAAA,OAAmBG,sBAAnB;MAAqC,CAArC;MAAuCH;MACnDA,+BAAuB,CAAvB,EAAuB,KAAvB,EAAuB,CAAvB,EAAuB,CAAvB,EAAuB,KAAvB,EAAuB,CAAvB,EAAuB,CAAvB,EAAuB,IAAvB;MAMUA;MAAWA;MAEfA;MAQHA;QAAA,OAAaG,uBAAb;MAAgC,CAAhC,EAAiC,aAAjC,EAAiC;QAAA,OAClBA,yBADkB;MACG,CADpC;;MAEDH;;;;MAPCA;MAAAA,4CAAyB,eAAzB,EAAyBG,iBAAzB,EAAyB,SAAzB,EAAyBH,kCAAzB,EAAyB,cAAzB,EAAyB,UAAzB,EAAyB,aAAzB,EAAyB,IAAzB","names":["AgGridAngular","AppComponent","constructor","http","field","sortable","filter","onNavigate","feature","loadedFeature","onGridReady","params","rowData$","get","onCellClicked","e","console","log","clearSelection","agGrid","api","deselectAll","i0","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Personal\\angular Practice\\angular-recipe-book\\src\\app\\app.component.ts","C:\\Personal\\angular Practice\\angular-recipe-book\\src\\app\\app.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { AgGridAngular } from 'ag-grid-angular';\r\nimport { CellClickedEvent, ColDef, GridReadyEvent } from 'ag-grid-community';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  loadedFeature = 'recipe';\r\n\r\n  onNavigate(feature: string) {\r\n    this.loadedFeature = feature;\r\n  }\r\n  public columnDefs: ColDef[] = [\r\n    { field: 'make'},\r\n    { field: 'model'},\r\n    { field: 'price' }\r\n  ];\r\n \r\n  // DefaultColDef sets props common to all Columns\r\n  public defaultColDef: ColDef = {\r\n    sortable: true,\r\n    filter: true,\r\n  };\r\n  \r\n  // Data that gets displayed in the grid\r\n  public rowData$!: Observable<any[]>;\r\n \r\n  // For accessing the Grid's API\r\n  @ViewChild(AgGridAngular) agGrid!: AgGridAngular;\r\n \r\n  constructor(private http: HttpClient) {}\r\n \r\n  // Example load data from server\r\n  onGridReady(params: GridReadyEvent) {\r\n    this.rowData$ = this.http\r\n      .get<any[]>('https://www.ag-grid.com/example-assets/row-data.json');\r\n  }\r\n \r\n  // Example of consuming Grid Event\r\n  onCellClicked( e: CellClickedEvent): void {\r\n    console.log('cellClicked', e);\r\n  }\r\n \r\n  // Example using Grid's API\r\n  clearSelection(): void {\r\n    this.agGrid.api.deselectAll();\r\n  }\r\n}\r\n","<app-header (featureSelected)=\"onNavigate($event)\"></app-header>\r\n<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <!-- <app-recipes *ngIf=\"loadedFeature === 'recipe'\"></app-recipes>\r\n      <app-shopping-list *ngIf=\"loadedFeature !== 'recipe'\"></app-shopping-list> -->\r\n\r\n      <h1>Hello Buddy</h1>\r\n\r\n      <ag-grid-angular\r\n   style=\"width: 100%; height: 100%\"\r\n   class=\"ag-theme-alpine\"\r\n   [columnDefs]=\"columnDefs\"\r\n   [defaultColDef]=\"defaultColDef\"\r\n   [rowData]=\"rowData$ | async\"\r\n   [rowSelection]=\"'multiple'\"\r\n   [animateRows]=\"true\"\r\n   (gridReady)=\"onGridReady($event)\"\r\n   (cellClicked)=\"onCellClicked($event)\"\r\n ></ag-grid-angular>\r\n    </div>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module"}